private template template_MissileActionHappening
[
    Action,
    Power
]
is TSequencingActionHappening
(
    ActionDescriptor = TActionDescriptorFireAndForget
    (
        EffetToLaunch = TActionCall
        (
            Action = <Action>
            LocalVariables =
            [
                parPower is TPinnableValue(ExpectedType: float InitialValue = <Power>),
                parShotOnGround is TPinnableValue(ExpectedType: bool InitialValue = False),
                parShotCount is TPinnableValue(ExpectedType: int InitialValue = 1),
                parWaitBetweenShot is TPinnableValue(ExpectedType: float InitialValue = 1.0),
                parTerrain is TPinnableValue(ExpectedType: int InitialValue = 0),
            ]
            NamedParams = MAP
            [
                ('parPower', parPower),
                ('parShotOnGround', parShotOnGround),
                ('parShotCount', parShotCount),
                ('parWaitBetweenShot', parWaitBetweenShot),
                ('parTerrain', parTerrain)
            ]
        )
    )
)

private template template_PropulsionActionHappening
[
    Action
]
is TIntroduceMobileHappening
(
    Anchor = 'fx_fumee_missile'
    Happening = TSequencingActionHappening
    (
        ActionDescriptor = TActionCall( Action = <Action> )
    )
)

export template Template_DescriptorMissileBase
[
    ProjectileModelFile,
    Actions,
]
is TTimelyReceiverFactoryCarrier
(
    DepictionTemplate = TDepictionTemplate
    (
        Scaler = CommonVehicleScaler
        Selector = OnlyHighDepictionSelector
        DepictionAlternatives = [
            DepictionDescriptor_LOD_High(
                MeshDescriptor =
                    TResourceMultiMaterialMesh
                    (
                        FileName = <ProjectileModelFile>
                        UsefulnessMask = CivMask/Common + TypeMask/Common
                    )
            ),
        ]
        Actions = <Actions>

        Operators = [ TCosmeticMissilePropulsionFXOperatorDescriptor() ]
    )
)